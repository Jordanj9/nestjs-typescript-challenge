name: lambda-deploy

on:
  push:
    branches:
      - main

jobs:
  cicd-green-checks:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.share-status.outputs.status }}
    strategy:
      matrix:
        node-version:
          - '18.x'
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Update npm
        run: npm install -g npm@7.x

      - name: Install dependencies for matchbox
        run: npm install

      - name: Run linter
        run: npm run lint

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Run unit tests
        run: npm run test

      - name: Check coverage
        uses: VeryGoodOpenSource/very_good_coverage@v2
        with:
          path: './coverage/lcov.info'
          min_coverage: 50

      - id: share-status
        name: Share status
        run: echo "status=success" >> $GITHUB_OUTPUT

  lambda-deploy:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.share-status.outputs.status }}
    needs:
      - cicd-green-checks
    steps:
      - name: Checkout to repo
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '18.x'

      - name: Install serverless globally
        run: npm install -g serverless@3

      - name: Configure serverless authentication
        run: sls config credentials --provider aws --key ${{ secrets.AWS_ACCESS_KEY_ID }} --secret ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Install nestjs cli
        run: npm install -g @nestjs/cli

      - name: Build lambda function
        run: npm run build

      - name: Deploy lambda function
        run: sls deploy
      - id: share-status
        name: Share status
        run: echo "status=success" >> $GITHUB_OUTPUT